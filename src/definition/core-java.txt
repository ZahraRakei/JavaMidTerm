***ANSWER ALL QUESTIONS BELOW***

What is a programming language?
Answer:
    A programming language is a formal language comprising a set of strings that produce various kinds of
    machine code output. Programming languages are one kind of computer language, and are used in computer
    programming to implement algorithms.

What is a JDK composed of? Define each components?
Answer:
    The Java Development Kit (JDK) is a software development environment used for developing Java applications and
    applets. It includes the Java Runtime Environment (JRE), an interpreter/loader (java), a compiler (javac),
    an archiver (jar), a documentation generator (javadoc) and other tools needed in Java development.

What is an IDE?
Answer:
    An IDE, or Integrated Development Environment, enables programmers to consolidate the different aspects of
    writing a computer program.
    IDEs increase programmer productivity by combining common activities of writing software into a single
    application: editing source code, building executables, and debugging.

What are some of the most popular Java IDEs available in the market?
Answer:
    * Intellij
    Eclipse.
    NetBeans.
    Oracle JDeveloper.
    MyEclipse.
    Greenfoot.
    jGRASP



Explain the entire java life cycle.
Answer:
    The developer writes cove in .java files, .java files pass through compiler(javac),then becomes machine
    code with .class extension. .class file is platform independent an could be run in any device; and is called
    bytecode. bytecode then passes to Java Virtual Machine (JVM) and there. it interprete to machine readable
    code(only 0 and 1) then it executes in cpu.

What is a class?
Answer:
    Class is a user defined bluepriint of objects that objects will be declared from.
    So, a class contains attributes and methods that the objects will have.

What is an object?
Answer:
    Object is a real existing instance of the class copying the attributes and methods that we made, but containing
    real data for this particular instance.

What is the entry point of an application?
Answer:
    If the application is to be executed, then entry point is main() method, because when java is going to run
    an application, the JVM looks for main() method to get started.


Why is the main() static?
Answer:
    it is static because compiler must be able to call it without the creation of an object or before the creation
    of an object of the class.

Which class is the superclass of all classes?
Answer:
     Object class.


What is difference between path and classpath variables?
Answer:
    PATH is an environment variable, but classpath is a System variable.
    path is to address a file only once, but classpath is used to reach java compiler and JVM
    or, path is used to set the path for all Java software tools like javac.exe, java.exe, javadoc.exe, and so on.
    classpath variable is used to set the path for java classes.


What is the difference between an Interface and Abstract class?
Answer:
    Interface is the file that contains Abstract methods. so:
    Interface is a kind of java class, but Abstract is a kind of Java method.
    a Java class can implement unlimited interfaces, but a Java class can contain only one abstract method.



Can you make an Object from an Interface and Abstract class? If yes or no, how would you do it?
Answer:
    No, it's not possible to instantiate an Interface

What is Access Modifier?
Answer:
    Access modifiers are public, private, protected and default keywords; they are written to modify the accebility of class,
    methods and other things in OOP languages.

What is OOP? Define each OOP concept.
Answer:
    OOP is short for Object Oriented Programming.
    OOP concepts are:
    Polymorphysm: using same word with different meaning in differen situations.
    Encasulation: keeping the fields(or variables) in a private class, then providing access to them via public
    methods.
    Inheritance:
    Abstraction: using simple  things and hide their complexity (those simple things are objects, classes, and
    variables

What is Java Package and which package is imported by default?
Answer:

What is an API? List some API's that you have used so far.
Answer:
    A package in Java is used to group related classes. Java compiler imports java. lang package internally by
    default.

Does java support multiple inheritance? Why or why not?
Answer:
    Inheritance from classes no, a class can inherit only one class , but with interface there is no limit; a
    java class can inherit multiple interfaces.

What is method overloading and when does it happen?
Answer:
    Overloading occurs when two or more methods in one class have the same method name but different parameters.
    Must have at least two methods by the same name in the class. Must have a different number of parameters.
    If the number of parameters is the same, then it must have different types of parameters.

Explain exceptions in java and how to handle them.
Answer:
    Exception means runtime error. The try-catch is the simplest method of handling exceptions. Put the code you
    want to run in the try block, and any Java exceptions that the code throws are caught by one or more catch
    blocks. This method will catch any type of Java exceptions that get thrown.

What is static keyword? When and how do we use it?
Answer:
     It is a keyword which is used to share the same variable or method of a given class.
     It can be used with variables, methods, blocks and nested classes. static is used for a constant variable
     or a method that is same for every instance of a class.

What is final keyword? When and how do we use it?
Answer:
    final keyword is a non-access specifier that is used to restrict a class, variable, and method. If we initialize
     a variable with the final keyword, then we cannot modify its value. If we declare a method as final, then
     it cannot be overridden by any subclasses.

Explain the difference between final, finally and finalize?
Answer:
    The basic difference between final, finally and finalize is that the final is an access modifier, finally is the
    block in Exception Handling and finalize is the method of object class. ... finalize is the method in Java which
    is used to perform clean up processing just before object is garbage collected.

What is a constructor?
Answer:
    Constructor is a block of code that initializes the newly created object. A constructor resembles an instance
    method in java but it’s not a method as it doesn’t have a return type.

Can we have multiple constructors in a class?
Answer:
    it's not possible to have two constructors with the exact same parameters. A class can have multiple constructors
    that differ in the number and/or type of their parameters.

If we don't have a constructor declared, what is called during the object creation?
Answer:
    If a class does not explicitly declare any, the Java compiler automatically provides a no-argument constructor,
    called the default constructor.

What is "this" keyword in Java? When would we use it?
Answer:
    The this keyword refers to the current object in a method or constructor. The most common use of the this keyword
     is to eliminate the confusion between class attributes and parameters with the same name (because a class
     attribute is shadowed by a method or constructor parameter)


What is "super" keyword in Java? What are some scenarios we would use it?
Answer:
    super can be used to refer immediate parent class instance variable. super can be used to invoke immediate
    parent class method. super() can be used to invoke immediate parent class constructor.

What does JVM stand for?
Answer:
    Java Virtual Machine.

Is JVM platform independent?
Answer:
    No, JVMs are not platform independent. In fact they are platform specific run time environment provided by the
    vendor. Each platform (Windows, UNIX, Mac etc) has its own JVM to run Java applications.

What version of Java are you using?
Answer:
    Java 11.0.9

What does JAR stand for?
Answer:
    JAR stands for Java ARchive.

What is the difference between JDK and JVM?
Answer:
    JDK is a software development kit whereas JRE is a software bundle that allows Java program to run,
    ,whereas JVM is an environment for executing bytecode. ...
    JDK is platform dependent, JRE is also platform dependent, but JVM is platform independent.
    JDK contains tools for developing, debugging, etc.

What is the difference between JVM and JRE?
Answer:
    The JVM is the process that runs the Java code, and the JRE are all files distributed to form the "environment"
    in which the JVM runs. JRE is an environment, in order to execute any Java program locally.

Explain the difference between compile-time and run-time?
Answer:
    Compile time is when the program is compiled; runtime is when it executes (on either a physical or virtual
    computer).

What is heap?
Answer:
    from programming perspective, heap is an area of pre-reserved computer main storage ( memory ) that a program
    process can use to store data in some variable amount that won't be known until the program is running.

How does Java manage its memory?
Answer:
    In Java, memory management is the process of allocation and de-allocation of objects, called Memory management.
    Java does memory management automatically. Java uses an automatic memory management system called a garbage
    collector.

What is the difference between String, StringBuffer and StringBuilder?
Answer:
The String class is an immutable class whereas StringBuffer and StringBuilder classes are mutable. ... StringBuffer
is synchronized i.e. thread safe. It means two threads can't call the methods of StringBuffer simultaneously.
StringBuilder is non-synchronized i.e. not thread safe.

What is Singleton class?
Answer:
    In object-oriented programming, a singleton class is a class that can have only one object (an instance of the
    class) at a time. After first time, if we try to instantiate the Singleton class, the new variable also points
    to the first instance created. So whatever modifications we do to any variable inside the class through any
    instance, it affects the variable of the single instance created and is visible if we access that variable
    through any variable of that class type defined.

What is Serialization and Deserialization?
Answer:

Explain the difference between While and Do..While loops?
Answer:

What is Enum?
Answer:

What is Iterator?
Answer:

Which one will take more memory: an int or Integer? Why?
Answer:

Why are Strings considered to be immutable in Java?
Answer:

What is constructor chaining in Java?
Answer:

The difference between Serial and Parallel Garbage Collector?
Answer:

What does JIT stands for?
Answer:

Explain the process of Java garbage collection?
Answer:

Can you guarantee the garbage collection process?
Answer:
    No, Garbage collection does not guarantee that a program will not run out of memory.

What is the difference between stack and heap in Java?
Answer:
    Java Heap Space is used throughout the application, but Stack is only used for the method — or methods —
    currently running. The Heap Space contains all objects are created, but Stack contains any reference to those
    objects. Objects stored in the Heap can be accessed throughout the application.

What is reflection in Java and why is it useful?
Answer:
It allows an executing Java program to examine or "introspect" upon itself, and manipulate internal properties of
the program.

What is multithreading in Java?
Answer:
    Multithreading refers to a process of executing two or more threads simultaneously for maximum utilization of
    the CPU.

What is synchronization in Java?
Answer:
    Synchronization in java is the capability to control the access of multiple threads to any shared resource.
    In the Multithreading concept, multiple threads try to access the shared resources at a time to produce
    inconsistent results. The synchronization is necessary for reliable communication between threads.

What is a Framework?
Answer:

What are the testing Frameworks available in Java?
Answer:

What are jUnit and testNG?
Answer:

What are the dependencies for this project?
Answer:

What is dependency injection in Java?
Answer:
    Dependency injection (DI) is the concept in which objects get other required objects from outside.

Explain what static binding and dynamic binding is?
Answer:
    Static binding happens when all information needed to call a function is available at the compile-time.
    Dynamic binding happens when the compiler cannot determine all information needed for a function call at
    compile-time.
